plugins {
    id 'java'
}

group = 'org.mangorage'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    compileOnly("com.google.code.gson:gson:2.11.0")

    java {
        modularity.inferModulePath = true
    }
}

sourceSets {
    main {
        // Make resources go into the same output folder as classes
        output.resourcesDir = output.classesDirs.singleFile
    }
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.mangorage.paradise.Bootstrap'
        )
    }
}

tasks.register('mergeModule') {
    def outputDir = layout.buildDirectory.dir('mergedModule')

    doLast {
        copy {
            from sourceSets.main.output.classesDirs
            into outputDir
        }
        copy {
            from sourceSets.main.output.resourcesDir
            into outputDir
        }
    }
}

task runGame(type: JavaExec) {
    group = 'application'
    description = "Runs the main class from build/run"

    def runDir = file("$buildDir/run")

    // Make sure the directory exists
    doFirst {
        if (!runDir.exists()) {
            runDir.mkdirs()
        }
    }

    mainClass.set('org.mangorage.paradise.Bootstrap')
    workingDir = runDir

    // Include the classes and runtime dependencies
    classpath = files(runDir) + files(sourceSets.main.runtimeClasspath)
}